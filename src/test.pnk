// returns 89
fn main() -> s32 {
    return fib(10);
}

/* if n is invalid, returns -1
 * else, returns the nth fibonacci number
 */
fn fib(n: s32) -> s32 {
    let ret: s32 = if fib_invalid(n) {
        -1
    } else if fib_base(n) {
        1
    } else {
        fib(n - 1) + fib(n - 2)
    };

    return ret;
}

fn fib_invalid(n: s32) -> bool {
    return n < 0;
}

fn fib_base(n: s32) -> bool {
    return n == 0 || n == 1;
}
